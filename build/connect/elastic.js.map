{"version":3,"sources":["../../src/connect/elastic.js"],"names":["es","TypeError","join","has","get","host","log","maxSockets","requestTimeout","agent","other","Client","createNodeAgent"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AASA;;;;kBAIe,YAAqC;AAAA,iFAAP,EAAO;AAAA,qBAAlCA,EAAkC;AAAA,MAAlCA,EAAkC;;AAClD,MAAI,CAAC,sBAASA,EAAT,CAAD,IAAiB,CAAC,sBAAcA,EAAd,CAAtB,EAAyC;AACvC,UAAM,IAAIC,SAAJ,CAAc,CAClB,6DADkB,EAElB,oDAFkB,EAGlB,yJAHkB,EAIlBC,IAJkB,CAIb,IAJa,CAAd,CAAN;AAKD;;AAPiD,cAgB9C,sBAAcF,EAAd,IAAoBA,EAApB,GAAyB,iBAAOG,GAAP,CAAWH,EAAX,IAAiB,iBAAOI,GAAP,CAAWJ,EAAX,CAAjB,GAAkC,EAhBb;AAAA,yBAUhDK,IAVgD;AAAA,MAUhDA,IAVgD;AAAA,wBAWhDC,GAXgD;AAAA,MAWhDA,GAXgD;AAAA,+BAYhDC,UAZgD;AAAA,MAYhDA,UAZgD;AAAA,mCAahDC,cAbgD;AAAA,MAahDA,cAbgD;AAAA,0BAchDC,KAdgD;AAAA,MAchDA,KAdgD;AAAA,MAe7CC,KAf6C;;AAkBlD,SAAO,IAAI,wBAAcC,MAAlB;AACLN,cADK,EACCC,QADD,EACME,8BADN,EACsBD,sBADtB;AAELK,qBAAiB;AAAA,aAAM,qBAAMH,KAAN,CAAN;AAAA;AAFZ,KAGFC,KAHE,EAAP;AAKD,C","file":"elastic.js","sourcesContent":["import config from 'config';\nimport elasticsearch from 'elasticsearch';\nimport isString from 'lodash.isstring';\nimport isPlainObject from 'lodash.isplainobject';\nimport Agent from './agent';\nimport {\n  CONFIG_SECTION_ES,\n  CONFIG_SECTION_AGENT,\n  ES_HOST,\n  ES_LOG,\n  ES_REQUEST_TIMEOUT,\n  ES_MAX_SOCKETS,\n} from '../constants';\n\n/**\n * @param {string|object} [es]=CONFIG_SECTION_ES\n * @returns {*}\n */\nexport default ({ es = CONFIG_SECTION_ES } = {}) => {\n  if (!isString(es) && !isPlainObject(es)) {\n    throw new TypeError([\n      'Настройки для соединения с ElasticSearch могут быть только:',\n      '- {string} -> название имени ключа из конфигурации',\n      '- {object} -> объектом с настройками @see https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/configuration.html#config-options',\n    ].join('\\n'))\n  }\n\n  const {\n    host = ES_HOST,\n    log = ES_LOG,\n    maxSockets = ES_MAX_SOCKETS,\n    requestTimeout = ES_REQUEST_TIMEOUT,\n    agent = CONFIG_SECTION_AGENT,\n    ...other\n  } = isPlainObject(es) ? es : config.has(es) ? config.get(es) : {};\n\n  return new elasticsearch.Client({\n    host, log, requestTimeout, maxSockets,\n    createNodeAgent: () => Agent(agent),\n    ...other\n  });\n}"]}