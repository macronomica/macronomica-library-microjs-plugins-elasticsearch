{"version":3,"sources":["../../src/actions/index.js"],"names":["micro","plugin","client","decorators","search","Object","keys","forEach","key","Proxy","get","target","property"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;kBAGe,UAACA,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AACxC,MAAMC,aAAa,EAAEC,wBAAF,EAAnB;;AAEAC,SACGC,IADH,CACQH,UADR,EAEGI,OAFH,CAEW;AAAA,WAAOJ,WAAYK,GAAZ,IAAoBL,WAAYK,GAAZ,EAAkBR,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAjC,CAA3B;AAAA,GAFX;;AAIA,SAAO,IAAIO,KAAJ,CAAUP,MAAV,EAAkB;AACvBQ,OADuB,eACnBC,MADmB,EACXC,QADW,EACD;AACpB,UAAIA,YAAYT,UAAhB,EAA4B;AAC1B,eAAOA,WAAYS,QAAZ,CAAP;AACD;;AAED,aAAOD,OAAQC,QAAR,CAAP;AACH;AAPwB,GAAlB,CAAP;AAQD,C","file":"index.js","sourcesContent":["import search from './search';\n\n/**\n *  Проксируем любые запросы к клиенту es и если есть перекрытые отдаем их\n */\nexport default (micro, plugin, client) => {\n  const decorators = { search };\n\n  Object\n    .keys(decorators)\n    .forEach(key => decorators[ key ] = decorators[ key ](micro, plugin, client));\n\n  return new Proxy(client, {\n    get(target, property) {\n      if (property in decorators) {\n        return decorators[ property ];\n      }\n\n      return target[ property ];\n  }});\n}"]}